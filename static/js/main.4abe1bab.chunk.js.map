{"version":3,"sources":["App.js","index.js"],"names":["App","useState","text","setText","show","setShow","preview","setPreview","marked","setOptions","breaks","id","className","fontSize","onClick","type","onChange","e","target","value","class","dangerouslySetInnerHTML","__html","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPA2CeA,EArCH,WACV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,oBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,SAAOC,WAAW,CAChBC,QAAQ,IAIR,8BACE,sBAAKC,GAAG,MAAR,UACGL,GACD,sBAAKM,UAAU,aAAf,UACE,sBAAKA,UAAU,UAAf,UAAyB,cAAC,IAAD,CAAgBC,SAAU,GAAID,UAAU,sBAAjE,UACGR,EAAO,cAAC,IAAD,CAAmBQ,UAAU,gBAAgBE,QAAS,kBAAMT,GAASD,MAAW,cAAC,IAAD,CAA2BS,SAAU,GAAID,UAAU,gBAAgBE,QAAS,kBAAMT,GAASD,SAErL,0BAAUO,GAAG,SAASI,KAAK,OAAOC,SAAU,SAACC,GAAD,OAAOd,EAAQc,EAAEC,OAAOC,aAGtE,qBAAKC,MAAM,cACVhB,GACD,sBAAKQ,UAAU,cAAf,UACA,sBAAKA,UAAU,UAAf,UACE,cAAC,IAAD,CAAgBC,SAAU,GAAID,UAAU,sBAD1C,YAEGN,EAAU,cAAC,IAAD,CAAmBM,UAAU,gBAAgBE,QAAS,kBAAMP,GAAYD,MAAc,cAAC,IAAD,CAA2BO,SAAU,GAAID,UAAU,gBAAgBE,QAAS,kBAAMP,GAAYD,SAEjM,qBAAKK,GAAG,UAAUU,wBAAyB,CACzCC,OAAQd,iBAAON,eC5BzBqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4abe1bab.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {FaFreeCodeCamp, FaExpandArrowsAlt} from \"react-icons/fa\"\nimport {TbArrowsDiagonalMinimize2} from \"react-icons/tb\"\nimport {marked} from \"marked\";\nimport \"./App.css\"\n\nconst App = () => {\n  const [text, setText] = useState(\"\")\n  const [show, setShow] = useState(true)\n  const [preview, setPreview] = useState(true)\n\n  marked.setOptions({\n    breaks: true\n  })\n  \n  return (\n    <div>\n      <div id=\"app\">\n        {preview &&\n        <div className=\"editorWrap\">\n          <div className='toolbar'><FaFreeCodeCamp fontSize={23} className=\"fa-free-code-camp\"/> Editor\n            {show ? <FaExpandArrowsAlt className='fa-arrows-alt' onClick={() => setShow(!show)}/> : <TbArrowsDiagonalMinimize2 fontSize={23} className='fa-arrows-alt' onClick={() => setShow(!show)}/>}\n           </div>\n          <textarea id=\"editor\" type=\"text\" onChange={(e) => setText(e.target.value)}></textarea>\n        </div>\n        }\n        <div class=\"converter\"></div>\n        {show &&\n        <div className=\"previewWrap\">\n        <div className='toolbar'>\n          <FaFreeCodeCamp fontSize={23} className=\"fa-free-code-camp\"/> Previwer\n          {preview ? <FaExpandArrowsAlt className='fa-arrows-alt' onClick={() => setPreview(!preview)}/> : <TbArrowsDiagonalMinimize2 fontSize={23} className='fa-arrows-alt' onClick={() => setPreview(!preview)}/>}\n        </div>\n        <div id=\"preview\" dangerouslySetInnerHTML={{\n          __html: marked(text),}}>\n        </div>\n        </div>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}